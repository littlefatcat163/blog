(()=>{const e=document.getElementById("modalSearch"),t=document.getElementById("modalSearchInput"),s=document.getElementById("modalSearchResult");let n,a;e.addEventListener("show.bs.modal",(()=>{null==a&&(s.innerHTML='<div class="m-auto text-center"><div class="spinner-grow text-primary" role="status"><span class="visually-hidden">Loading...</span></div></div>',fetch(LNote.root+"content.json").then((e=>e.json())).then((e=>a=e)).finally((()=>s.innerHTML=""))),t.focus()})),e.addEventListener("hidden.bs.modal",(()=>{console.log("hide")})),t.addEventListener("input",(e=>{null!=a&&(clearTimeout(n),n=setTimeout((()=>{const t=e.target.value.trim();if(""===t)return;const n=a.filter((e=>e.excerpt.includes(t)||e.title.includes(t)));if(n.length>0){e.target.classList.remove("invalid"),e.target.classList.add("valid");const{root:a}=LNote;s.innerHTML=n.map((e=>{let{excerpt:s,title:n}=e;return s.includes(t)?s=s.replace(t,`<span class="text-success-emphasis">${t}</span>`):n.includes(t)&&(n=n.replace(t,`<span class="text-success-emphasis">${t}</span>`)),`<div><a href="${a}${e.path}" class="fs-5 link-warning">${n}</a><p>${s}</p></div>`})).join("")}else e.target.classList.remove("valid"),e.target.classList.add("invalid")}),500))}))})();